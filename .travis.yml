---
# Suggested tools that can save round-trips to github and a lot of time:
#
# yamllint .travis.yml
# ~/.gem/ruby/2.7.0/bin/travis lint .travis.yml
# yaml merge-expand .travis.yml exp.yml && diff -b -u .travis.yml exp.yml

language: c
dist: bionic

git:
  depth: 20

before_install:
  - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
  - sudo apt-get update -qq
  - sudo apt-get install -y python-ply python-git libelf-dev codespell fakeroot gcc-9 g++-9 gcc-aarch64-linux-gnu
  - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 90 --slave /usr/bin/g++ g++ /usr/bin/g++-9
  - sudo apt-get install -y xz-utils lftp

install:
  - git clone --depth 5 https://github.com/thesofproject/kconfig.git
  - pushd kconfig
  - &short_log git --no-pager log --oneline --graph --decorate --max-count=5
  - popd
  - mkdir 0day
  - wget https://raw.githubusercontent.com/intel/lkp-tests/master/sbin/make.cross -O make.cross
  - chmod +x make.cross
  - mkdir -p $PWD/bin
  - git clone --depth 1 --branch v0.6.2 git://git.kernel.org/pub/scm/devel/sparse/sparse.git
  - BINDIR=$PWD/bin make -C sparse install
  - export PATH=$PWD/bin:$PATH
  - nproc # should be 2 according to https://docs.travis-ci.com/user/reference/overview/#virtualization-environments

jobs:
  include:
    - if: type = pull_request
      name: checkpatch
      script:
        - *short_log
        # TODO: stop screen-scraping the git log and switch to
        # ${TRAVIS_COMMIT_RANGE} or ${TRAVIS_BRANCH}..HEAD after testing
        # both force pushes and not.
        # Note TRAVIS_COMMIT_RANGE has triple dots for "git diff" and
        # needs conversion to double dots for git log's inconsistent
        # user interface.
        - printf '%s %s\n' "${TRAVIS_BRANCH}" "${TRAVIS_COMMIT_RANGE/.../..}"
        - SHA_PR=`git log --oneline -1 | sed -rn "s/.*Merge (.*) into.*/\1/p"`
        - SHA_MAIN=`git log --oneline -1 | sed -rn "s/.*Merge .* into (.*)/\1/p"`
        - ( set -x; scripts/checkpatch.pl --strict --codespell -g $SHA_MAIN..$SHA_PR )
    - name: Sparse check
      script:
        - export ARCH=x86_64
        - bash kconfig/kconfig-sof-default.sh
        - make modules_prepare
        - make M=sound/soc/sof C=2
    - name: "BUILD GCC9 SOF Kernel x86_64"
      script:
        - export ARCH=x86_64 KCFLAGS="-Wall -Werror"
        - export MAKEFLAGS=j"$(nproc)"
        - bash kconfig/kconfig-sof-default.sh
        - make modules_prepare
        - make sound/ W=1
        - make drivers/soundwire/ W=1
        - make
        - make bindeb-pkg
    - name: "BUILD GCC9 SST Kernel x86_64"
      script:
        - export ARCH=x86_64
        - bash kconfig/kconfig-sst.sh
        - KCFLAGS="-Wall -Werror" make -j`getconf _NPROCESSORS_ONLN`
    - name: "BUILD GCC9 SOF Kernel i386"
      script:
        - export ARCH=i386 KCFLAGS="-Wall -Werror"
        - export MAKEFLAGS=j"$(nproc)"
        - bash kconfig/kconfig-sof-default.sh
        - make modules_prepare
        - make sound/
        - make drivers/soundwire/
        - make
    - name: "BUILD GCC9 SOF Kernel arm64"
      script:
        - export ARCH=arm64 CROSS_COMPILE=/usr/bin/aarch64-linux-gnu-
        - bash kconfig/kconfig-sof-arm64.sh
        - KCFLAGS="-Wall -Werror" make -j`getconf _NPROCESSORS_ONLN`
    - name: "BUILD CLANG SOF Kernel x86_64"
      script:
        - bash kconfig/kconfig-sof-default.sh
        - COMPILER_INSTALL_PATH=$PWD/0day COMPILER=clang ./make.cross ARCH=x86_64 olddefconfig
        - COMPILER_INSTALL_PATH=$PWD/0day COMPILER=clang ./make.cross ARCH=x86_64
